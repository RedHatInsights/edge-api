// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/common/kafka/kafkaconfigmap.go

// Package mock_kafkacommon is a generated GoMock package.
package mock_kafkacommon

import (
	reflect "reflect"

	kafka "github.com/confluentinc/confluent-kafka-go/v2/kafka"
	gomock "github.com/golang/mock/gomock"
)

// MockKafkaConfigMapServiceInterface is a mock of KafkaConfigMapServiceInterface interface.
type MockKafkaConfigMapServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockKafkaConfigMapServiceInterfaceMockRecorder
}

// MockKafkaConfigMapServiceInterfaceMockRecorder is the mock recorder for MockKafkaConfigMapServiceInterface.
type MockKafkaConfigMapServiceInterfaceMockRecorder struct {
	mock *MockKafkaConfigMapServiceInterface
}

// NewMockKafkaConfigMapServiceInterface creates a new mock instance.
func NewMockKafkaConfigMapServiceInterface(ctrl *gomock.Controller) *MockKafkaConfigMapServiceInterface {
	mock := &MockKafkaConfigMapServiceInterface{ctrl: ctrl}
	mock.recorder = &MockKafkaConfigMapServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKafkaConfigMapServiceInterface) EXPECT() *MockKafkaConfigMapServiceInterfaceMockRecorder {
	return m.recorder
}

// GetKafkaConsumerConfigMap mocks base method.
func (m *MockKafkaConfigMapServiceInterface) GetKafkaConsumerConfigMap(consumerGroup string) kafka.ConfigMap {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKafkaConsumerConfigMap", consumerGroup)
	ret0, _ := ret[0].(kafka.ConfigMap)
	return ret0
}

// GetKafkaConsumerConfigMap indicates an expected call of GetKafkaConsumerConfigMap.
func (mr *MockKafkaConfigMapServiceInterfaceMockRecorder) GetKafkaConsumerConfigMap(consumerGroup interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKafkaConsumerConfigMap", reflect.TypeOf((*MockKafkaConfigMapServiceInterface)(nil).GetKafkaConsumerConfigMap), consumerGroup)
}

// GetKafkaProducerConfigMap mocks base method.
func (m *MockKafkaConfigMapServiceInterface) GetKafkaProducerConfigMap() kafka.ConfigMap {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKafkaProducerConfigMap")
	ret0, _ := ret[0].(kafka.ConfigMap)
	return ret0
}

// GetKafkaProducerConfigMap indicates an expected call of GetKafkaProducerConfigMap.
func (mr *MockKafkaConfigMapServiceInterfaceMockRecorder) GetKafkaProducerConfigMap() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKafkaProducerConfigMap", reflect.TypeOf((*MockKafkaConfigMapServiceInterface)(nil).GetKafkaProducerConfigMap))
}
