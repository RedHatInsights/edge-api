// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/clients/rbac/client.go

// Package mock_rbac is a generated GoMock package.
package mock_rbac

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	rbac "github.com/redhatinsights/edge-api/pkg/clients/rbac"
)

// MockClientInterface is a mock of ClientInterface interface.
type MockClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockClientInterfaceMockRecorder
}

// MockClientInterfaceMockRecorder is the mock recorder for MockClientInterface.
type MockClientInterfaceMockRecorder struct {
	mock *MockClientInterface
}

// NewMockClientInterface creates a new mock instance.
func NewMockClientInterface(ctrl *gomock.Controller) *MockClientInterface {
	mock := &MockClientInterface{ctrl: ctrl}
	mock.recorder = &MockClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClientInterface) EXPECT() *MockClientInterfaceMockRecorder {
	return m.recorder
}

// GetAccessList mocks base method.
func (m *MockClientInterface) GetAccessList(application rbac.Application) (rbac.AccessList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccessList", application)
	ret0, _ := ret[0].(rbac.AccessList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccessList indicates an expected call of GetAccessList.
func (mr *MockClientInterfaceMockRecorder) GetAccessList(application interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccessList", reflect.TypeOf((*MockClientInterface)(nil).GetAccessList), application)
}

// GetInventoryGroupsAccess mocks base method.
func (m *MockClientInterface) GetInventoryGroupsAccess(acl rbac.AccessList, resource rbac.ResourceType, accessType rbac.AccessType) (bool, []string, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInventoryGroupsAccess", acl, resource, accessType)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].([]string)
	ret2, _ := ret[2].(bool)
	ret3, _ := ret[3].(error)
	return ret0, ret1, ret2, ret3
}

// GetInventoryGroupsAccess indicates an expected call of GetInventoryGroupsAccess.
func (mr *MockClientInterfaceMockRecorder) GetInventoryGroupsAccess(acl, resource, accessType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInventoryGroupsAccess", reflect.TypeOf((*MockClientInterface)(nil).GetInventoryGroupsAccess), acl, resource, accessType)
}
