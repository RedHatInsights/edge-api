// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/redhatinsights/edge-api/pkg/services (interfaces: ImageSetsServiceInterface)

// Package mock_services is a generated GoMock package.
package mock_services

import (
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	reflect "reflect"
)

// MockImageSetsServiceInterface is a mock of ImageSetsServiceInterface interface
type MockImageSetsServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockImageSetsServiceInterfaceMockRecorder
}

// MockImageSetsServiceInterfaceMockRecorder is the mock recorder for MockImageSetsServiceInterface
type MockImageSetsServiceInterfaceMockRecorder struct {
	mock *MockImageSetsServiceInterface
}

// NewMockImageSetsServiceInterface creates a new mock instance
func NewMockImageSetsServiceInterface(ctrl *gomock.Controller) *MockImageSetsServiceInterface {
	mock := &MockImageSetsServiceInterface{ctrl: ctrl}
	mock.recorder = &MockImageSetsServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockImageSetsServiceInterface) EXPECT() *MockImageSetsServiceInterfaceMockRecorder {
	return m.recorder
}

// ListAllImageSets mocks base method
func (m *MockImageSetsServiceInterface) ListAllImageSets(arg0 http.ResponseWriter, arg1 *http.Request) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAllImageSets", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListAllImageSets indicates an expected call of ListAllImageSets
func (mr *MockImageSetsServiceInterfaceMockRecorder) ListAllImageSets(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAllImageSets", reflect.TypeOf((*MockImageSetsServiceInterface)(nil).ListAllImageSets), arg0, arg1)
}
