// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/services/repobuilder.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/redhatinsights/edge-api/pkg/models"
)

// MockRepoBuilderInterface is a mock of RepoBuilderInterface interface.
type MockRepoBuilderInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRepoBuilderInterfaceMockRecorder
}

// MockRepoBuilderInterfaceMockRecorder is the mock recorder for MockRepoBuilderInterface.
type MockRepoBuilderInterfaceMockRecorder struct {
	mock *MockRepoBuilderInterface
}

// NewMockRepoBuilderInterface creates a new mock instance.
func NewMockRepoBuilderInterface(ctrl *gomock.Controller) *MockRepoBuilderInterface {
	mock := &MockRepoBuilderInterface{ctrl: ctrl}
	mock.recorder = &MockRepoBuilderInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepoBuilderInterface) EXPECT() *MockRepoBuilderInterfaceMockRecorder {
	return m.recorder
}

// BuildUpdateRepo mocks base method.
func (m *MockRepoBuilderInterface) BuildUpdateRepo(ctx context.Context, id uint) (*models.UpdateTransaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BuildUpdateRepo", ctx, id)
	ret0, _ := ret[0].(*models.UpdateTransaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BuildUpdateRepo indicates an expected call of BuildUpdateRepo.
func (mr *MockRepoBuilderInterfaceMockRecorder) BuildUpdateRepo(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BuildUpdateRepo", reflect.TypeOf((*MockRepoBuilderInterface)(nil).BuildUpdateRepo), ctx, id)
}

// CommitTarDelete mocks base method.
func (m *MockRepoBuilderInterface) CommitTarDelete(tarFileName string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CommitTarDelete", tarFileName)
	ret0, _ := ret[0].(error)
	return ret0
}

// CommitTarDelete indicates an expected call of CommitTarDelete.
func (mr *MockRepoBuilderInterfaceMockRecorder) CommitTarDelete(tarFileName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CommitTarDelete", reflect.TypeOf((*MockRepoBuilderInterface)(nil).CommitTarDelete), tarFileName)
}

// CommitTarDownload mocks base method.
func (m *MockRepoBuilderInterface) CommitTarDownload(c *models.Commit, dest string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CommitTarDownload", c, dest)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CommitTarDownload indicates an expected call of CommitTarDownload.
func (mr *MockRepoBuilderInterfaceMockRecorder) CommitTarDownload(c, dest interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CommitTarDownload", reflect.TypeOf((*MockRepoBuilderInterface)(nil).CommitTarDownload), c, dest)
}

// CommitTarExtract mocks base method.
func (m *MockRepoBuilderInterface) CommitTarExtract(c *models.Commit, tarFileName, dest string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CommitTarExtract", c, tarFileName, dest)
	ret0, _ := ret[0].(error)
	return ret0
}

// CommitTarExtract indicates an expected call of CommitTarExtract.
func (mr *MockRepoBuilderInterfaceMockRecorder) CommitTarExtract(c, tarFileName, dest interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CommitTarExtract", reflect.TypeOf((*MockRepoBuilderInterface)(nil).CommitTarExtract), c, tarFileName, dest)
}

// CommitTarUpload mocks base method.
func (m *MockRepoBuilderInterface) CommitTarUpload(c *models.Commit, tarFileName string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CommitTarUpload", c, tarFileName)
	ret0, _ := ret[0].(error)
	return ret0
}

// CommitTarUpload indicates an expected call of CommitTarUpload.
func (mr *MockRepoBuilderInterfaceMockRecorder) CommitTarUpload(c, tarFileName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CommitTarUpload", reflect.TypeOf((*MockRepoBuilderInterface)(nil).CommitTarUpload), c, tarFileName)
}

// ImportRepo mocks base method.
func (m *MockRepoBuilderInterface) ImportRepo(ctx context.Context, r *models.Repo) (*models.Repo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ImportRepo", ctx, r)
	ret0, _ := ret[0].(*models.Repo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ImportRepo indicates an expected call of ImportRepo.
func (mr *MockRepoBuilderInterfaceMockRecorder) ImportRepo(ctx, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ImportRepo", reflect.TypeOf((*MockRepoBuilderInterface)(nil).ImportRepo), ctx, r)
}

// RepoPullLocalStaticDeltas mocks base method.
func (m *MockRepoBuilderInterface) RepoPullLocalStaticDeltas(u, o *models.Commit, uprepo, oldrepo string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RepoPullLocalStaticDeltas", u, o, uprepo, oldrepo)
	ret0, _ := ret[0].(error)
	return ret0
}

// RepoPullLocalStaticDeltas indicates an expected call of RepoPullLocalStaticDeltas.
func (mr *MockRepoBuilderInterfaceMockRecorder) RepoPullLocalStaticDeltas(u, o, uprepo, oldrepo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RepoPullLocalStaticDeltas", reflect.TypeOf((*MockRepoBuilderInterface)(nil).RepoPullLocalStaticDeltas), u, o, uprepo, oldrepo)
}

// StoreRepo mocks base method.
func (m *MockRepoBuilderInterface) StoreRepo(ctx context.Context, repo *models.Repo) (*models.Repo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreRepo", ctx, repo)
	ret0, _ := ret[0].(*models.Repo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StoreRepo indicates an expected call of StoreRepo.
func (mr *MockRepoBuilderInterfaceMockRecorder) StoreRepo(ctx, repo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreRepo", reflect.TypeOf((*MockRepoBuilderInterface)(nil).StoreRepo), ctx, repo)
}
