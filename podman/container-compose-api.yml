version: '2'
secrets:
  edgemgmt_config:
    file: $PWD/podman/env/edgemgmt_config.json
services:
  edge-api-service:
    container_name: edge-api-service
    image: localhost/edge-api:fedora
#    image: localhost/edge-api:localdev
#    image: quay.io/cloudservices/edge-api:latest

    restart: unless-stopped
    privileged: true
    ports:
      - 3000:3000
    env_file:
      - env/edge-api.env
    volumes:
      - ${PWD}:/opt/app-root/src:Z
      - ${HOME}/devgo:/go:Z
      - ${HOME}/devdata/:/.cache:Z
      - ${HOME}/devdata/repos/:/tmp/repos:Z
      - ${HOME}/devdata/vartmp:/var/tmp:Z
    command: ["/opt/app-root/src/devrun.sh"]
#    command: ["go", "run", "/opt/app-root/src/main.go"]

    secrets:
      - source: edgemgmt_config
        target: /tmp/edgemgmt_config.json
    depends_on:
      - "postgresql"
      - "kafka"
    deploy:
      resources:
        limits:
          memory: 4G

#    edge-api-utility:
#      image: localhost/edge-api:localdev
#      restart: unless-stopped
#      privileged: true
#      env_file:
#        - edge-api-utility.env
#      depends-on: postgresql
#      volumes:
#        - ~/dev/git/RedHatInsights/edge-api:/opt/app-root/src:Z
#      working_dir: /opt/app-root/src
#      command: go run cmd/kafka/main.go

#    edge-ui:
#        image: localhost/edge-frontend:podmandev2
#        image: quay.io/loadtheaccumulator/edge-frontend:podmandev
#        restart: unless-stopped
#        ports:
#          - 1337:1337
#        env_file:
#          - edge-ui.env
#        depends-on: edge-api-service
#        volumes:
#          - ~/dev/git/RedHatInsights/edge-frontend:/opt/app-root:Z
#        working_dir: /opt/app-root
#        command: npm run start:proxy
